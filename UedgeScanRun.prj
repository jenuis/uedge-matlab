<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration build-checksum="1988162315" file="/home/xliu/work/github/uedge-matlab/UedgeScanRun.prj" location="/home/xliu/work/github/uedge-matlab" name="UedgeScanRun" preferred-package-location="/home/xliu/work/github/uedge-matlab/UedgeScanRun/for_redistribution" preferred-package-type="package.type.install" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>UedgeScanRun</param.appname>
    <param.icon />
    <param.icons />
    <param.version>0.1.18</param.version>
    <param.authnamewatermark>Xiang LIU</param.authnamewatermark>
    <param.email>xliu@ipp.ac.cn</param.email>
    <param.company>ASIPP</param.company>
    <param.summary>The standalone application to replace uedgescan.run.</param.summary>
    <param.description>This application is used to break the license limit of MATLAB's parallel computing toolbox. Should only be used to replace uedgescan.run(). For job generation, please call uedgescan.job_gen_*.</param.description>
    <param.screenshot />
    <param.guid />
    <param.installpath.string>/ASIPP/UedgeScanRun/</param.installpath.string>
    <param.installpath.combo>option.installpath.user</param.installpath.combo>
    <param.logo />
    <param.install.notes />
    <param.target.install.notes>In the following directions, replace MR/v99 by the directory on the target machine where MATLAB is installed, or MR by the directory where the MATLAB Runtime is installed.

(1) Set the environment variable XAPPLRESDIR to this value:

MR/v99/X11/app-defaults


(2) If the environment variable LD_LIBRARY_PATH is undefined, set it to the following:

MR/v99/runtime/glnxa64:MR/v99/bin/glnxa64:MR/v99/sys/os/glnxa64:MR/v99/sys/opengl/lib/glnxa64

If it is defined, set it to the following:

${LD_LIBRARY_PATH}:MR/v99/runtime/glnxa64:MR/v99/bin/glnxa64:MR/v99/sys/os/glnxa64:MR/v99/sys/opengl/lib/glnxa64</param.target.install.notes>
    <param.intermediate>${PROJECT_ROOT}/UedgeScanRun/for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}/UedgeScanRun/for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}/UedgeScanRun/for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}/UedgeScanRun</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>UEDGE-MATLAB</param.web.mcr.name>
    <param.package.mcr.name>UedgeMatlabInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>false</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	 uemat_run_massive -? 
	 uemat_run_massive work_dir cluster_name_or_num_workers log_file 
 Input Arguments 
	 -?  print help on how to use the application 
	 work_dir cluster_name_or_num_workers log_file  input arguments 
 Description 
 	 This application is used to break the license limit of MATLAB's parallel computing toolbox. Should only be used to replace uedgescan.run(). For job generation, please call uedgescan.job_gen_*.</param.help.text>
    <unset>
      <param.icon />
      <param.icons />
      <param.authnamewatermark />
      <param.email />
      <param.company />
      <param.screenshot />
      <param.guid />
      <param.installpath.string />
      <param.installpath.combo />
      <param.logo />
      <param.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.logdir />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.log.file />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}/uemat_run_massive.m</file>
    </fileset.main>
    <fileset.resources>
      <file>${PROJECT_ROOT}/which2.m</file>
    </fileset.resources>
    <fileset.package />
    <fileset.depfun>
      <file>${PROJECT_ROOT}/abspath.m</file>
      <file>${PROJECT_ROOT}/dimnum.m</file>
      <file>${PROJECT_ROOT}/findvalue.m</file>
      <file>${PROJECT_ROOT}/getversion.m</file>
      <file>${PROJECT_ROOT}/haselement.m</file>
      <file>${PROJECT_ROOT}/matread.m</file>
      <file>${PROJECT_ROOT}/parseArgs.m</file>
      <file>${PROJECT_ROOT}/struct2vararg.m</file>
      <file>${PROJECT_ROOT}/uedgedata.m</file>
      <file>${PROJECT_ROOT}/uedgerun.m</file>
      <file>${PROJECT_ROOT}/uedgescan.m</file>
    </fileset.depfun>
    <build-deliverables>
      <file location="${PROJECT_ROOT}/UedgeScanRun/for_testing" name="UedgeScanRun" optional="false">/home/xliu/work/github/uedge-matlab/UedgeScanRun/for_testing/UedgeScanRun</file>
      <file location="${PROJECT_ROOT}/UedgeScanRun/for_testing" name="readme.txt" optional="true">/home/xliu/work/github/uedge-matlab/UedgeScanRun/for_testing/readme.txt</file>
      <file location="${PROJECT_ROOT}/UedgeScanRun/for_testing" name="run_UedgeScanRun.sh" optional="false">/home/xliu/work/github/uedge-matlab/UedgeScanRun/for_testing/run_UedgeScanRun.sh</file>
      <file location="${PROJECT_ROOT}/UedgeScanRun/for_testing" name="splash.png" optional="false">/home/xliu/work/github/uedge-matlab/UedgeScanRun/for_testing/splash.png</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>/work/IDE/MATLAB/R2020b</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
        <toolbox name="embeddedcoder" />
        <toolbox name="gpucoder" />
        <toolbox name="fixedpoint" />
        <toolbox name="matlabhdlcoder" />
        <toolbox name="neuralnetwork" />
        <toolbox name="polyspacebugfinder" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
      <toolbox>
        <embeddedcoder>
          <enabled>true</enabled>
        </embeddedcoder>
      </toolbox>
      <toolbox>
        <gpucoder>
          <enabled>true</enabled>
        </gpucoder>
      </toolbox>
      <toolbox>
        <fixedpoint>
          <enabled>true</enabled>
        </fixedpoint>
      </toolbox>
      <toolbox>
        <matlabhdlcoder>
          <enabled>true</enabled>
        </matlabhdlcoder>
      </toolbox>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
      <toolbox>
        <polyspacebugfinder>
          <enabled>true</enabled>
        </polyspacebugfinder>
      </toolbox>
    </matlab>
    <platform>
      <unix>true</unix>
      <mac>false</mac>
      <windows>false</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>true</linux>
      <solaris>false</solaris>
      <osver>4.18.0-425.19.2.el8_7.x86_64</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>glnxa64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>